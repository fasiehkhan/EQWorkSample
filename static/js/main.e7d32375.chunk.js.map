{"version":3,"sources":["components/Mychart.js","components/Mychart4.js","components/Mychart5.js","components/Mychart6.js","components/Mychart7.js","components/Mychart8.js","components/Mychart9.js","components/Mychart10.js","components/Buttons.js","components/ImpressionDays.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Mychart","dates","events","type","colors","title","axisOptions","xAxisMode","yAxisMode","xIsSeries","height","data","labels","datasets","values","Mychart4","impressions","clicks","name","chartType","Mychart5","dates2","clicks2","Mychart6","dates3","impressions3","clicks3","Mychart7","dates4","impressions4","clicks4","Mychart8","dates5","impressions5","clicks5","Mychart10","dates6","impressions6","clicks6","dates7","impressions7","clicks7","Buttons","className","to","Component","ImpressionDays","HomePage","useState","setDates","dates1","setDates1","impressions1","setDates2","impressions2","setDates3","setDates4","setDates5","setDates6","setDates7","useEffect","fetch","then","response","json","i","max","length","push","date","hour","basename","process","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7d32375.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\n\nexport default function Mychart({dates, events}) {\n    \n        return (\n            <ReactFrappeChart\n            type=\"bar\"\n            colors={[\"#21ba45\"]}\n            title='Impressions per Day'\n            axisOptions={{ xAxisMode: \"span\", yAxisMode: \"span\", xIsSeries: 1 }}\n            height={250}\n            data={{\n              labels: dates,\n              datasets: [{ values: events }]\n            }}\n          />\n        );\n      }\n\n\n","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart4({dates, impressions, clicks}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Sunday)\"\n            data= {{\n                labels: dates,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }\n","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart5({dates2, impressions, clicks2}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Monday)\"\n            data= {{\n                labels: dates2,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks2,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }\n\n","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart6({dates3, impressions3, clicks3}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Tuesday)\"\n            data= {{\n                labels: dates3,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions3,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks3,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart7({dates4, impressions4, clicks4}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Wednesday)\"\n            data= {{\n                labels: dates4,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions4,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks4,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart8({dates5, impressions5, clicks5}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Thursday)\"\n            data= {{\n                labels: dates5,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions5,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks5,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart10({dates6, impressions6, clicks6}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Friday)\"\n            data= {{\n                labels: dates6,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions6,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks6,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart10({dates7, impressions7, clicks7}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Saturday)\"\n            data= {{\n                labels: dates7,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions7,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks7,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport class Buttons extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <Link to=\"/data\" className=\"button\">\n                    Impressions\n                </Link>\n\n                <Link to=\"/data3\" className=\"button3\">\n                    Clicks vs Impressions\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Buttons\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport class ImpressionDays extends Component {\n    render() {\n        return (\n            <div className=\"container2\">\n            <Link to=\"/data4\" className=\"button2\">\n                Clicks vs Impressions (Sunday)\n            </Link>\n\n            <Link to=\"/data5\" className=\"button2\">\n                Clicks vs Impressions (Monday)\n            </Link>\n\n            <Link to=\"/data6\" className=\"button2\">\n                Clicks vs Impressions (Tuesday)\n            </Link>\n\n            <Link to=\"/data7\" className=\"button2\">\n                Clicks vs Impressions (Wednesday)\n            </Link>\n            <Link to=\"/data8\" className=\"button2\">\n                Clicks vs Impressions (Thursday)\n            </Link>\n            <Link to=\"/data9\" className=\"button2\">\n                Clicks vs Impressions (Friday)\n            </Link>\n            <Link to=\"/data10\" className=\"button2\">\n                Clicks vs Impressions (Saturday)\n            </Link>\n        </div>\n        )\n    }\n}\n\nexport default ImpressionDays\n","import React, {useEffect, useState, Component} from 'react';\nimport Mychart from './Mychart';\nimport Mychart4 from './Mychart4';\nimport Mychart5 from './Mychart5';\nimport Mychart6 from './Mychart6';import Mychart7 from './Mychart7';\nimport Mychart8 from './Mychart8';import Mychart9 from './Mychart9';\nimport Mychart10 from './Mychart10';\n\n\n\nimport Buttons from './Buttons'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport ImpressionDays from './ImpressionDays';\n\n\nfunction HomePage()  {\nconst [dates, setDates] = useState([]) ;\nconst [events] = useState([]) ;\nconst [impressions] = useState([]);\n\n\nconst [dates1, setDates1] = useState([]);\nconst [clicks] = useState([]);\nconst [impressions1] = useState([]);\n\nconst [dates2, setDates2] = useState([]);\nconst [clicks2] = useState([]);\nconst [impressions2] = useState([]);\n\nconst [dates3, setDates3] = useState([]);\nconst [clicks3] = useState([]);\nconst [impressions3] = useState([]);\n\nconst [dates4, setDates4] = useState([]);\nconst [clicks4] = useState([]);\nconst [impressions4] = useState([]);\n\nconst [dates5, setDates5] = useState([]);\nconst [clicks5] = useState([]);\nconst [impressions5] = useState([]);\n\nconst [dates6, setDates6] = useState([]);\nconst [clicks6] = useState([]);\nconst [impressions6] = useState([]);\n\nconst [dates7, setDates7] = useState([]);\nconst [clicks7] = useState([]);\nconst [impressions7] = useState([]);\n\n// fetch the dates from API endpoint for bar graph\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/daily\").then(response => \n     response.json().then(data => {\n       setDates(data)\n    for(let i = 0, max = data.length; i<max;i+=1){\n      dates.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n         ) \n      // fetch num of events from API endpoint\n      events.push(data[i].impressions)\n      impressions.push(data[i].impressions)\n\n    }\n    setDates(dates)\n      }))\n  }, [])\n\n\n  // fetching data for Impressions (sunday)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates1(data)\n\n    for(let i = 0, max = 24; i<max;i+=1){\n      dates1.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + i)\n      // fetch num of clicks from API endpoint\n      clicks.push(data[i].clicks)\n      impressions1.push(data[i].impressions)\n\n    }\n    setDates1(dates1)\n  }))\n  }, [])\n\n\n  // fetching data for Impressions (Monday)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates2(data)\n\n    for(let i = 24, max = 48; i<max;i+=1){\n      dates2.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks2.push(data[i].clicks)      \n      impressions2.push(data[i].impressions)\n\n    }\n    setDates2(dates2)\n  }))\n  }, [])\n\n  // fetching data for Impressions (Tuesday)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates3(data)\n\n    for(let i = 48, max = 72; i<max;i+=1){\n      dates3.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks3.push(data[i].clicks)      \n      impressions3.push(data[i].impressions)\n\n    }\n    setDates3(dates3)\n  }))\n  }, [])\n\n  // fetching data for Impressions (Wed)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates4(data)\n\n    for(let i = 72, max = 96; i<max;i+=1){\n      dates4.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks4.push(data[i].clicks)      \n      impressions4.push(data[i].impressions)\n\n    }\n    setDates4(dates4)\n  }))\n  }, [])\n\n  // fetching data for Impressions (thursday)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates5(data)\n\n    for(let i = 96, max = 120; i<max;i+=1){\n      dates5.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks5.push(data[i].clicks)      \n      impressions5.push(data[i].impressions)\n\n    }\n    setDates5(dates5)\n  }))\n  }, [])\n\n  // fetching data for Impressions (friday)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates6(data)\n\n    for(let i = 120, max = 144; i<max;i+=1){\n      dates6.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks6.push(data[i].clicks)      \n      impressions6.push(data[i].impressions)\n\n    }\n    setDates6(dates6)\n  }))\n  }, [])\n\n  // fetching data for Impressions (sat)\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates6(data)\n\n    for(let i = 144, max = 168; i<max;i+=1){\n      dates7.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks7.push(data[i].clicks)      \n      impressions7.push(data[i].impressions)\n\n    }\n    setDates7(dates7)\n  }))\n  }, [])\n\n  \n\n        return (\n   <div className=\"App\">\n          <Router basename={`${process.env.PUBLIC_URL}`}>\n      <Buttons/>\n\n      <Switch>\n        <Route path=\"/data\" component={() => <Mychart dates={dates} events={events}/>}/>\n        <Route path=\"/data3\" component={()=> <ImpressionDays/>}/>\n        <Route path=\"/data4\" component={()=> <Mychart4 dates={dates1} impressions={impressions1} clicks={clicks}/>}/>\n        <Route path=\"/data5\" component={()=> <Mychart5 dates2={dates2} impressions={impressions2} clicks2={clicks2}/>}/>\n        <Route path=\"/data6\" component={()=> <Mychart6 dates3={dates3} impressions3={impressions3} clicks3={clicks3}/>}/>\n        <Route path=\"/data7\" component={()=> <Mychart7 dates4={dates4} impressions4={impressions4} clicks4={clicks4}/>}/>\n        <Route path=\"/data8\" component={()=> <Mychart8 dates5={dates5} impressions5={impressions5} clicks5={clicks5}/>}/>\n        <Route path=\"/data9\" component={()=> <Mychart9 dates6={dates6} impressions6={impressions6} clicks6={clicks6}/>}/>\n        <Route path=\"/data10\" component={()=> <Mychart10 dates7={dates7} impressions7={impressions7} clicks7={clicks7}/>}/>\n\n\n      </Switch>\n      </Router>\n\n    </div> \n        )\n    }\n\n\nexport default HomePage","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage';\n\n\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App\">\n      <div className=\"title\">\n            EQWorks Sample\n    </div>\n     <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}