{"version":3,"sources":["components/Mychart.js","components/Mychart2.js","components/Mychart4.js","components/Mychart5.js","components/Mychart6.js","components/Mychart7.js","components/Mychart8.js","components/Mychart9.js","components/Mychart10.js","components/Buttons.js","components/ImpressionDays.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Mychart","dates","events","type","colors","title","axisOptions","xAxisMode","yAxisMode","xIsSeries","height","data","labels","datasets","values","Mychart2","clicks","name","chartType","yMarkers","label","value","options","labelPos","yRegions","start","end","Mychart4","impressions","Mychart5","dates2","clicks2","Mychart6","dates3","impressions3","clicks3","Mychart7","dates4","impressions4","clicks4","Mychart8","dates5","impressions5","clicks5","Mychart9","dates6","impressions6","clicks6","Mychart10","dates7","impressions7","clicks7","Buttons","className","to","Component","ImpressionDays","HomePage","useState","setDates","dates1","setDates1","setDates2","impressions2","setDates3","setDates4","setDates5","setDates6","setDates7","useEffect","fetch","then","response","json","i","max","length","push","date","hour","basename","process","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f5dd6a8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\n\nexport default function Mychart({dates, events}) {\n    \n        return (\n            <ReactFrappeChart\n            type=\"bar\"\n            colors={[\"#21ba45\"]}\n            title='Impressions per Day'\n            axisOptions={{ xAxisMode: \"span\", yAxisMode: \"span\", xIsSeries: 1 }}\n            height={250}\n            data={{\n              labels: dates,\n              datasets: [{ values: events }]\n            }}\n          />\n        );\n      }\n\n\n","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\n\nexport default function Mychart2({dates, clicks}) {\n    \n        return (\n            <ReactFrappeChart\n\n            type= 'axis-mixed' // or 'bar', 'line', 'pie', 'percentage'\n            //height= 300,\n            //colors= ['purple', '#ffa3ef', 'light-blue'],\n          \n            data= {{\n              labels: dates,\n            \n              datasets: [\n                {\n                  name: \"Some Data\", chartType: 'bar',\n                  values: [25, 40, 30, 35, 8, 52, 17, -4]\n                },\n                {\n                  name: \"Another Set\", chartType: 'bar',\n                  values: [25, 50,  15, 18, 32, 27, 14]\n                },\n                {\n                  name: \"Yet Another\", chartType: 'line',\n                  values: [15, 20, -3, -15, 58, 12, -17, 37]\n                }\n              ],\n            \n              yMarkers: [{ label: \"Marker\", value: 70,\n                options: { labelPos: 'left' }}],\n              yRegions: [{ label: \"Region\", start: -10, end: 50,\n                options: { labelPos: 'right' }}]\n              }\n            \n            \n              }\n          />\n        );\n      }\n\n","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart4({dates, impressions, clicks}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Sunday)\"\n            data= {{\n                labels: dates,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart5({dates2, impressions, clicks2}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Monday)\"\n            data= {{\n                labels: dates2,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks2,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }\n\n\n\n      ","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart6({dates3, impressions3, clicks3}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Tuesday)\"\n            data= {{\n                labels: dates3,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions3,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks3,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart7({dates4, impressions4, clicks4}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Wednesday)\"\n            data= {{\n                labels: dates4,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions4,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks4,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart8({dates5, impressions5, clicks5}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Wednesday)\"\n            data= {{\n                labels: dates5,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions5,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks5,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart9({dates6, impressions6, clicks6}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Wednesday)\"\n            data= {{\n                labels: dates6,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions6,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks6,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport ReactFrappeChart from \"react-frappe-charts\";\n\n\n\nexport default function Mychart10({dates7, impressions7, clicks7}) {\n    \n        return (\n            <ReactFrappeChart\n            title=\"Clicks vs Impressions (Wednesday)\"\n            data= {{\n                labels: dates7,\n                datasets: [\n                  {\n                    name: \"Impressions\",\n                    values: impressions7,\n                    chartType: 'line'\n                  },\n                  {\n                    name: \"Clicks\",\n                    values: clicks7,\n                    chartType: 'line'\n                  }\n                ]\n            }\n        }\n        type='axis-mixed'\n            \n          />\n        );\n      }","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport class Buttons extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <Link to=\"/data\" className=\"button\">\n                    Impressions\n                </Link>\n\n                <Link to=\"/data3\" className=\"button3\">\n                    Clicks vs Impressions\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Buttons\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport class ImpressionDays extends Component {\n    render() {\n        return (\n            <div className=\"container2\">\n            <Link to=\"/data4\" className=\"button2\">\n                Clicks vs Impressions (Sunday)\n            </Link>\n\n            <Link to=\"/data5\" className=\"button2\">\n                Clicks vs Impressions (Monday)\n            </Link>\n\n            <Link to=\"/data6\" className=\"button2\">\n                Clicks vs Impressions (Tuesday)\n            </Link>\n\n            <Link to=\"/data7\" className=\"button2\">\n                Clicks vs Impressions (Wednesday)\n            </Link>\n            <Link to=\"/data8\" className=\"button2\">\n                Clicks vs Impressions (Thursday)\n            </Link>\n            <Link to=\"/data9\" className=\"button2\">\n                Clicks vs Impressions (Friday)\n            </Link>\n            <Link to=\"/data10\" className=\"button2\">\n                Clicks vs Impressions (Saturday)\n            </Link>\n        </div>\n        )\n    }\n}\n\nexport default ImpressionDays\n","import React, {useEffect, useState, Component} from 'react';\nimport Mychart from './Mychart';\nimport Mychart2 from './Mychart2';\nimport Mychart4 from './Mychart4';\nimport Mychart5 from './Mychart5';\nimport Mychart6 from './Mychart6';import Mychart7 from './Mychart7';\nimport Mychart8 from './Mychart8';import Mychart9 from './Mychart9';\nimport Mychart10 from './Mychart10';\n\n\n\nimport Buttons from './Buttons'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport ImpressionDays from './ImpressionDays';\n\n\nfunction HomePage()  {\nconst [dates, setDates] = useState([]) ;\nconst [events] = useState([]) ;\nconst [impressions] = useState([]);\n\n\nconst [dates1, setDates1] = useState([]);\nconst [clicks] = useState([]);\n\nconst [dates2, setDates2] = useState([]);\nconst [clicks2] = useState([]);\nconst [impressions2] = useState([]);\n\nconst [dates3, setDates3] = useState([]);\nconst [clicks3] = useState([]);\nconst [impressions3] = useState([]);\n\nconst [dates4, setDates4] = useState([]);\nconst [clicks4] = useState([]);\nconst [impressions4] = useState([]);\n\nconst [dates5, setDates5] = useState([]);\nconst [clicks5] = useState([]);\nconst [impressions5] = useState([]);\n\nconst [dates6, setDates6] = useState([]);\nconst [clicks6] = useState([]);\nconst [impressions6] = useState([]);\n\nconst [dates7, setDates7] = useState([]);\nconst [clicks7] = useState([]);\nconst [impressions7] = useState([]);\n\n// fetch the dates from API endpoint for bar graph\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates(data)\n    for(let i = 0, max = data.length; i<max;i+=1){\n      dates.push(data[i].date[0] + data[i].date[1] + data[i].date[2] +\n         data[i].date[3] +  data[i].date[4] +  data[i].date[5] + data[i].date[6]\n         +  data[i].date[7]) \n      // fetch num of events from API endpoint\n      events.push(data[i].impressions)\n      impressions.push(data[i].impressions)\n\n    }\n    setDates(dates)\n      }))\n  }, [])\n\n\n  // fetching data for Impressions (sunday)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates1(data)\n\n    for(let i = 0, max = 24; i<max;i+=1){\n      dates1.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + i)\n      // fetch num of clicks from API endpoint\n      clicks.push(data[i].clicks)\n    }\n    setDates1(dates1)\n  }))\n  }, [])\n\n\n  // fetching data for Impressions (Monday)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates2(data)\n\n    for(let i = 24, max = 48; i<max;i+=1){\n      dates2.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks2.push(data[i].clicks)      \n      impressions2.push(data[i].impressions)\n\n    }\n    setDates2(dates2)\n  }))\n  }, [])\n\n  // fetching data for Impressions (Tuesday)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates3(data)\n\n    for(let i = 48, max = 72; i<max;i+=1){\n      dates3.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks3.push(data[i].clicks)      \n      impressions3.push(data[i].impressions)\n\n    }\n    setDates3(dates3)\n  }))\n  }, [])\n\n  // fetching data for Impressions (Wed)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates4(data)\n\n    for(let i = 72, max = 96; i<max;i+=1){\n      dates4.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks4.push(data[i].clicks)      \n      impressions4.push(data[i].impressions)\n\n    }\n    setDates4(dates4)\n  }))\n  }, [])\n\n  // fetching data for Impressions (thursday)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates5(data)\n\n    for(let i = 96, max = 120; i<max;i+=1){\n      dates5.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks5.push(data[i].clicks)      \n      impressions5.push(data[i].impressions)\n\n    }\n    setDates5(dates5)\n  }))\n  }, [])\n\n  // fetching data for Impressions (friday)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates6(data)\n\n    for(let i = 120, max = 144; i<max;i+=1){\n      dates6.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks6.push(data[i].clicks)      \n      impressions6.push(data[i].impressions)\n\n    }\n    setDates6(dates6)\n  }))\n  }, [])\n\n  // fetching data for Impressions (sat)\n  useEffect(() => {\n    fetch(\"https://sparkly-peony-nlqxoacynm.glitch.me/stats/hourly\").then(response => \n     response.json().then(data => {\n       setDates6(data)\n\n    for(let i = 144, max = 168; i<max;i+=1){\n      dates7.push(data[i].date[0] + data[i].date[1] + data[i].date[2]\n        + data[i].date[3] + data[i].hour)\n      // fetch num of clicks from API endpoint\n      clicks7.push(data[i].clicks)      \n      impressions7.push(data[i].impressions)\n\n    }\n    setDates7(dates7)\n  }))\n  }, [])\n\n  \n\n        return (\n   <div className=\"App\">\n          <Router basename={`${process.env.PUBLIC_URL}`}>\n      <Buttons/>\n\n      <Switch>\n        <Route path=\"/data\" component={() => <Mychart dates={dates} events={events}/>}/>\n        <Route path=\"/data2\" component={()=> <Mychart2 dates1={dates1} clicks={clicks}/>}/>\n        <Route path=\"/data3\" component={()=> <ImpressionDays/>}/>\n        <Route path=\"/data4\" component={()=> <Mychart4 dates={dates1} impressions={impressions} clicks={clicks}/>}/>\n        <Route path=\"/data5\" component={()=> <Mychart5 dates2={dates2} impressions={impressions2} clicks2={clicks2}/>}/>\n        <Route path=\"/data6\" component={()=> <Mychart6 dates3={dates3} impressions3={impressions3} clicks3={clicks3}/>}/>\n        <Route path=\"/data7\" component={()=> <Mychart7 dates4={dates4} impressions4={impressions4} clicks4={clicks4}/>}/>\n        <Route path=\"/data8\" component={()=> <Mychart8 dates5={dates5} impressions5={impressions5} clicks5={clicks5}/>}/>\n        <Route path=\"/data9\" component={()=> <Mychart9 dates6={dates6} impressions6={impressions6} clicks6={clicks6}/>}/>\n        <Route path=\"/data10\" component={()=> <Mychart10 dates7={dates7} impressions7={impressions7} clicks7={clicks7}/>}/>\n\n\n      </Switch>\n      </Router>\n\n    </div> \n        )\n    }\n\n\nexport default HomePage\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage';\n\n\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App\">\n      <div className=\"title\">\n            EQWorks Sample\n    </div>\n     <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}